version: '3.4'

networks:
    mynetwork:


services:
    event_rules_storage_api:
        image: event_rules_storage_api:latest
        build:
            context: ./event_rules_storage_api/
            dockerfile: Dockerfile
        restart: always
        container_name: event_rules_storage_api
        ports:
          # - "${API_PORT}:${API_PORT}"
          - "${API_PORT}:80"
        env_file:
          - '.env'
        volumes:
          - ./event_rules_storage_api:/usr/src/event_rules_storage_api
        depends_on:
          - db
        networks:
          - mynetwork


    db:
      image: timescale/timescaledb:latest-pg12
      container_name: local_postgres_db
      restart: always
      env_file:
        - '.env'
      environment:
        POSTGRES_DB: "${POSTGRES_DB}"
        POSTGRES_USER: "${POSTGRES_USER}"
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
        POSTGRES_HOST: "${POSTGRES_HOST}"
      expose:
        - "${POSTGRES_PORT}"
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      networks:
        - mynetwork


  # Mosquitto broker for mqtt protocol connection
    mosquitto:
      build:
          context: ./mosquitto/
          dockerfile: Dockerfile
      restart: always
      container_name: mosquitto
      expose:
        - "${BROKER_PORT}"
        - 9001
      env_file:
        - '.env-communication-service'
      ports:
        - "${BROKER_PORT}:${BROKER_PORT}"
        - 9001:9001

      depends_on:
        - event_rules_storage_api
      networks:
        - mynetwork


    communication_service:
      image: communication_service:latest
      build:
          context: ./communication_service/
          dockerfile: Dockerfile
      restart: always
      container_name: communication_service
      env_file:
        - '.env-communication-service'
      volumes:
        - ./communication_service:/usr/src/communication_service
      depends_on:
        - mosquitto
      networks:
        - mynetwork


    event_handler:
      image: event_handler:latest
      build:
          context: ./event_handler/
          dockerfile: Dockerfile
      restart: always
      container_name: event_handler
      env_file:
        - '.env-communication-service'
      volumes:
        - ./event_handler:/usr/src/event_handler
      depends_on:
        - communication_service
      networks:
        - mynetwork


    # controller_bot:
    #   image: controller_bot:latest
    #   build:
    #       context: ./controller_bot/
    #       dockerfile: Dockerfile
    #   restart: always
    #   container_name: controller_bot
    #   expose:
    #     - "8082"
    #   ports:
    #     - "8082:8082"
    #   env_file:
    #     - '.env-communication-service'
    #   depends_on:
    #       - mosquitto
    #   network_mode: host
    #   # networks:
    #   #     - local_auto_tier
