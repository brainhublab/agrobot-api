version: '3.4'

networks:
  local_auto_tier:
    driver: bridge

secrets:
  ca.crt:
    file: ./certs/ca.crt
  server.crt:
    file: ./certs/server.crt
  server.key:
    file: ./certs/server.key

services:
    event_rules_storage_api:
        image: event_rules_storage_api:latest
        build:
            context: ./event_rules_storage_api/
            dockerfile: Dockerfile
        restart: always
        container_name: event_rules_storage_api
        # environment:
        #   FLASK_DEBUG: 1
        ports:
            - 5000:5000
        env_file:
          - '.env'
        volumes:
          - ./event_rules_storage_api:/usr/src/event_rules_storage_api
        depends_on:
            - db
        network_mode: host
        secrets:
          - source: ca.crt
            target: /usr/src/event_rules_storage_api/app/services/mqtt_client/ca.crt
        # networks:
        #     - local_auto_tier

    db:
      image: postgres
      container_name: local_postgres_db
      restart: always
      env_file:
        - '.env'
      environment:
        POSTGRES_DB: "${POSTGRES_DB}"
        POSTGRES_USER: "${POSTGRES_USER}"
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
        POSTGRES_HOST: "${POSTGRES_HOST}"
      expose:
        - "5432"
      ports:
        - "5432:5432"
      network_mode: host
      # networks:
      #     - local_auto_tier


  # Mosquitto broker for mqtt protocol connection
    mosquitto:
      build:
          context: ./mosquitto/
          dockerfile: Dockerfile
      restart: always
      container_name: mosquitto
      expose:
        - "1883"
        - "9001"
      env_file:
        - '.env-communication-service'
      ports:
        - "1883:1883"
        - "9001:9001"
      depends_on:
        - event_rules_storage_api
      network_mode: host
      secrets:
        - source: ca.crt
          target: /ca.crt
        - source: server.crt
          target: /server.crt
        - source: server.key
          target: /server.key
      # networks:
      #   - local_auto_tier

    communication_service:
      image: communication_service:latest
      build:
          context: ./communication_service/
          dockerfile: Dockerfile
      restart: always
      container_name: communication_service
      expose:
        - "8080"
      ports:
        - "8080:8080"
      env_file:
        - '.env-communication-service'
      volumes:
        - ./communication_service:/usr/src/communication_service
      depends_on:
        - mosquitto
      network_mode: host
      secrets:
        - source: ca.crt
          target: /usr/src/communication_service/mqtt_services/ca.crt
      # networks:
      #   - local_auto_tier

    event_handler:
      image: event_handler:latest
      build:
          context: ./event_handler/
          dockerfile: Dockerfile
      restart: always
      container_name: event_handler
      expose:
        - "8081"
      ports:
        - "8081:8081"
      env_file:
        - '.env-communication-service'
      volumes:
        - ./event_handler:/usr/src/event_handler
      depends_on:
        - communication_service
      network_mode: host
      secrets:
        - source: ca.crt
          target: /usr/src/event_handler/mqtt_services/ca.crt
      # networks:
      #     - local_auto_tier

    # controller_bot:
    #   image: controller_bot:latest
    #   build:
    #       context: ./controller_bot/
    #       dockerfile: Dockerfile
    #   restart: always
    #   container_name: controller_bot
    #   expose:
    #     - "8082"
    #   ports:
    #     - "8082:8082"
    #   env_file:
    #     - '.env-communication-service'
    #   depends_on:
    #       - mosquitto
    #   network_mode: host
    #   # networks:
    #   #     - local_auto_tier
